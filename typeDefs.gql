type Product {
    _id: ID
    name: String!
    price: Int!
    shift: Boolean!
}

type Drink {
    _id: ID
    name: String!
    price: Int!
}

type Side {
    _id: ID
    name: String!
    price: Int!
}

type Extra {
    _id: ID
    name: String!
    price: Int!
}

type Order {
    _id: ID
    product: [Product]!
    drink: [Drink]!
    total: Int!
    client: String!
    employee: User!
    status: Boolean!
    side: String
    extra: String
}

type User {
    _id: ID
    username: String!
    password: String! 
}

type Query {
    getUser: User
    getDrinks: [Drink]!
    getProducts: [Product]!
    getSides: Side
    getExtras: Extra
    getOrders: [Order]!

}

type Mutation {
    addDrink(name:String!, price:Int!): Drink!
    addProduct(name:String!, price:Int!, shift:Boolean!): Product!
    addSide(name:String, price:Int): Side
    addExtra(name:String, price:Int): Extra
    addOrder(product:ID!, drink: ID!, extra: ID, side: ID total:Int!, client:String!, employee:ID!, status: Boolean!): Order!
    signupUser(username: String!, password: String!): User!
}

